{"version":3,"file":"static/js/587.79bbf1c5.chunk.js","mappings":"4RAIaA,GAAgBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,6FAMbE,EAAQF,EAAAA,EAAAA,GAAH,2JASLG,EAAeH,EAAAA,EAAAA,IAAH,kMAaZI,EAAQJ,EAAAA,EAAAA,MAAH,4GAMLK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,s5BAyCLO,EAAMP,EAAAA,EAAAA,OAAH,6gBAyBHQ,GAAWR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,uJAWRU,EAAcV,EAAAA,EAAAA,IAAH,+DAKXW,EAAcX,EAAAA,EAAAA,OAAH,4eA8BXY,GAAaZ,EAAAA,EAAAA,GAAOa,EAAAA,IAAPb,CAAH,uIASVc,GAAYd,EAAAA,EAAAA,GAAOe,EAAAA,IAAPf,CAAH,uI,mBC5IhBgB,EAAgB,CACpBC,SAAU,GACVC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAcMC,EAAiB,kBAAMD,GAAkBD,EAAxB,EAEvB,OACE,SAAC,KAAD,CAAQR,cAAeA,EAAeW,SAfnB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BR,GACES,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAOX,SACbC,MAAOU,EAAOV,MACdC,SAAUS,EAAOT,YAIrBU,GACD,EAKC,SACG,gBAAGG,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAClC,EAAD,YACE,SAACG,EAAD,mCACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAO8B,QAAQ,WAAf,wBACA,SAAC7B,EAAD,CACE8B,KAAK,OACLJ,KAAK,WACLK,GAAG,WACHC,aAAa,MACbC,YAAa,IACb,gBAAYN,EAAOf,WAAYgB,EAAQhB,aAEzC,SAACT,EAAD,CAAUuB,KAAK,WAAWQ,UAAU,aAGtC,UAACpC,EAAD,YACE,SAACC,EAAD,CAAO8B,QAAQ,QAAf,qBACA,SAAC7B,EAAD,CACE8B,KAAK,QACLJ,KAAK,QACLK,GAAG,QACHC,aAAa,MACbC,YAAa,IACb,gBAAYN,EAAOd,QAASe,EAAQf,UAEtC,SAACV,EAAD,CAAUuB,KAAK,QAAQQ,UAAU,aAGnC,UAACpC,EAAD,YACE,SAACC,EAAD,CAAO8B,QAAQ,WAAf,wBACA,UAACxB,EAAD,YACE,SAACL,EAAD,CACE8B,KAAMX,EAAgB,OAAS,WAC/BO,KAAK,WACLK,GAAG,WACHC,aAAa,MACbC,YAAa,IACb,gBAAYN,EAAOb,WAAYc,EAAQd,aAGzC,SAACR,EAAD,CACEwB,KAAK,SACLK,QAASd,EACT,aAAYF,EAHd,SAKGA,GAAgB,SAACV,EAAD,KAAgB,SAACF,EAAD,UAGrC,SAACJ,EAAD,CAAUuB,KAAK,WAAWQ,UAAU,aAEtC,SAAChC,EAAD,CAAK4B,KAAK,SAAV,sBACA,qDACA,SAAC,KAAD,CAAMM,GAAI,SAAV,uBArDH,GA0DN,EC5FD,EATqB,WACpB,OACC,iCACC,qCACA,SAACrB,EAAD,MAGF,C","sources":["components/SignUpForm/SignUpForm.styled.jsx","components/SignUpForm/SignUpForm.jsx","Pages/Registration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { FaEyeSlash, FaEye } from 'react-icons/fa';\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 25px;\n\n  font-weight: 500;\n  font-size: 24px;\n  color: #fff;\n  text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n\n  margin-bottom: 40px;\n  max-width: 100%;\n  width: 450px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const Label = styled.label`\n  font-size: 22px;\n  color: #fff;\n  text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Input = styled(Field)`\n  padding: 15px;\n  width: 100%;\n\n  font-size: 24px;\n  color: rgba(255, 255, 255, 0.7);\n  text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n\n  background-color: transparent;\n  border: 1px solid rgba(255, 255, 255, 0.7);\n  border-radius: 10px;\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.2);\n\n  transition: all 300ms ease-in-out;\n\n  outline: none;\n\n  &:not(:placeholder-shown)[data-error='false'] {\n    color: #fff;\n    border: 1px solid rgba(255, 255, 255, 1);\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n\n  &[data-error='true'] {\n    color: rgba(255, 255, 255, 1);\n    border: 1px solid rgba(227, 67, 67, 0.7);\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n\n  &[type='password'] {\n    padding-right: 65px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #fff;\n    border: 1px solid rgba(255, 255, 255, 1);\n    background-color: rgba(255, 255, 255, 0.1);\n  }\n`;\n\nexport const Btn = styled.button`\n  padding: 16px 32px;\n\n  font-weight: 700;\n  font-size: 24px;\n  color: rgba(255, 255, 255, 0.7);\n  text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n\n  background-color: transparent;\n\n  border: 1px solid rgba(255, 255, 255, 0.7);\n  border-radius: 10px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n\n  transition: all 250ms ease-in-out;\n\n  cursor: pointer;\n\n  :hover {\n    color: #fff;\n    border: 1px solid rgba(255, 255, 255, 1);\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -10%;\n  left: 0;\n\n  transform: translateY(100%);\n\n  font-size: 14px;\n  color: #e34343;\n`;\n\nexport const PassWrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const ShowPassBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 15px;\n\n  transform: translateY(-50%);\n\n  padding: 5px;\n  width: 33px;\n  height: 33px;\n\n  background-color: transparent;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.2);\n\n  border: 1px solid rgba(255, 255, 255, 0.7);\n  border-radius: 7px;\n\n  transition: border 250ms ease-in-out;\n\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid rgba(255, 255, 255, 1);\n  }\n\n  &:hover > svg {\n    fill: #fff;\n  }\n`;\n\nexport const IconHidden = styled(FaEyeSlash)`\n  width: 100%;\n  height: 100%;\n\n  fill: rgba(255, 255, 255, 0.7);\n\n  transition: fill 250ms ease-in-out;\n`;\n\nexport const IconShown = styled(FaEye)`\n  width: 100%;\n  height: 100%;\n\n  fill: rgba(255, 255, 255, 0.7);\n\n  transition: fill 250ms ease-in-out;\n`;\n","import { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport {\n  FormContainer,\n  Title,\n  InputWrapper,\n  Label,\n  Input,\n  Btn,\n  ErrorMsg,\n  IconHidden,\n  IconShown,\n  PassWrapper,\n  ShowPassBtn,\n} from './SignUpForm.styled';\nimport { Link } from 'react-router-dom';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      register({\n        name: values.username,\n        email: values.email,\n        password: values.password,\n      })\n    );\n\n    resetForm();\n  };\n\n  const togglePassword = () => setPasswordShown(!passwordShown);\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ errors, touched }) => (\n        <FormContainer>\n          <Title>Sign up to continue</Title>\n          <InputWrapper>\n            <Label htmlFor=\"username\">Username:</Label>\n            <Input\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              autoComplete=\"off\"\n              placeholder={' '}\n              data-error={errors.username && touched.username ? true : false}\n            />\n            <ErrorMsg name=\"username\" component=\"span\" />\n          </InputWrapper>\n\n          <InputWrapper>\n            <Label htmlFor=\"email\">Email:</Label>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              autoComplete=\"off\"\n              placeholder={' '}\n              data-error={errors.email && touched.email ? true : false}\n            />\n            <ErrorMsg name=\"email\" component=\"span\" />\n          </InputWrapper>\n\n          <InputWrapper>\n            <Label htmlFor=\"password\">Password:</Label>\n            <PassWrapper>\n              <Input\n                type={passwordShown ? 'text' : 'password'}\n                name=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                placeholder={' '}\n                data-error={errors.password && touched.password ? true : false}\n              />\n\n              <ShowPassBtn\n                type=\"button\"\n                onClick={togglePassword}\n                data-shown={passwordShown}\n              >\n                {passwordShown ? <IconShown /> : <IconHidden />}\n              </ShowPassBtn>\n            </PassWrapper>\n            <ErrorMsg name=\"password\" component=\"span\" />\n          </InputWrapper>\n          <Btn type=\"submit\">Sign up</Btn>\n          <p>Already have an account?</p>\n          <Link to={'/Login'}> Login </Link>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};","import { RegisterForm } from '../components/SignUpForm/SignUpForm';\n\nconst Registration = () => {\n\treturn (\n\t\t<>\n\t\t\t<h1>Sign Up</h1>\n\t\t\t<RegisterForm />\n\t\t</>\n\t);\n};\n\nexport default Registration;\n"],"names":["FormContainer","styled","Form","Title","InputWrapper","Label","Input","Field","Btn","ErrorMsg","ErrorMessage","PassWrapper","ShowPassBtn","IconHidden","FaEyeSlash","IconShown","FaEye","initialValues","username","email","password","RegisterForm","dispatch","useDispatch","useState","passwordShown","setPasswordShown","togglePassword","onSubmit","values","resetForm","register","name","errors","touched","htmlFor","type","id","autoComplete","placeholder","component","onClick","to"],"sourceRoot":""}