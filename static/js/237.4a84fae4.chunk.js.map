{"version":3,"file":"static/js/237.4a84fae4.chunk.js","mappings":"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","sources":["components/contactForm/contactForm.styled.jsx","redux/contacts/selectors.js","components/contactForm/contactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","redux/filter/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const NewContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 10px;\n  padding: 12px;\n  width: 100%;\n\n  border: 2px solid lightblue;\n  \n  border-radius: 5px;\n  background-color: #ececec;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const NameLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const NameInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  border: 1px solid lightblue;\n`;\n\nexport const NumberLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const NumberInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  border: 1px solid lightblue;\n`;\n\nexport const AddContactBtn = styled.button`\n  padding: 8px;\n  background-color: lightblue;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 18px;\n  &:hover {\n    scale: 1.05;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n  &:active {\n    background-color: lightgreen;\n    transform: scale(0.95);\n    transition: all 0.1s ease-in-out;\n  }\n  &:disabled {\n    background-color: lightcoral;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n","import { addContact } from 'redux/contacts/operations';\nimport {\n  AddContactBtn,\n  NameInput,\n  NameLabel,\n  NewContactForm,\n  NumberInput,\n  NumberLabel,\n} from './contactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const nameContact = form.elements.name.value.trim();\n    const numberContact = form.elements.number.value.trim();\n\n    const searchTwins = contacts.some(\n      contact =>\n        contact.name.toLowerCase() ===\n        form.elements.name.value.toLowerCase().trim()\n    );\n\n    if (searchTwins) {\n      alert(`${form.elements.name.value.trim()} is already in contacts`);\n      form.reset();\n      return;\n    }\n    dispatch(\n      addContact({ id: nanoid(), name: nameContact, number: numberContact })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <NewContactForm onSubmit={onSubmit}>\n      <NameLabel htmlFor=\"nameContact\">Name</NameLabel>\n      <NameInput\n        type=\"text\"\n        name=\"name\"\n        id=\"nameContact\"\n        placeholder=\"Jack Jonson\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batze Castelmore d'Artagnan\"\n        required\n      />\n      <NumberLabel htmlFor=\"numberContact\">Number</NumberLabel>\n      <NumberInput\n        type=\"tel\"\n        name=\"number\"\n        id=\"numberContact\"\n        placeholder=\"123-45-67\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n    </NewContactForm>\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport default function ContactItem({ name, number}) {\n\n  return (\n    <>\n      <p>{name}: </p>\n      <p>{number}</p>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  width: 100%;\n  border: 2px solid lightblue;\n  border-radius: 5px;\n  background-color: #ececec;\n  -webkit-filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  gap: 20px;\n  padding: 20px 12px;\n  background-color: white;\n  border: 1px solid lightblue;\n  border-radius: 5px;\n  &:nth-of-type(2n) {\n    background-color: lightblue;\n  }\n  &:nth-of-type(2n-1) {\n    background-color: #cbf0fd;\n  }\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  margin-left: auto;\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #ffb8b8;\n\n  &:hover {\n    background-color: lightcoral;\n    scale: 1.05;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n","export const selectContactFilter = state => state.filter;","import { useDispatch, useSelector } from 'react-redux';\nimport ContactItem from '../Contact/Contact';\nimport {\n  ContactDeleteBtn,\n  ContactsItem,\n  ContactsList,\n} from './ContactList.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectContactFilter } from 'redux/filter/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\n\nconst MyContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectContactFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ContactsList>\n      {filteredContacts.length === 0 ? (\n        <h2>You have no contacts yet!</h2>\n      ) : (\n        <h2>You have {filteredContacts.length} contacts</h2>\n      )}\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactsItem key={id}>\n            <ContactItem name={name} number={number} id={id} />\n            <ContactDeleteBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </ContactDeleteBtn>\n          </ContactsItem>\n        );\n      })}\n    </ContactsList>\n  );\n};\n\n\nexport { MyContactList };\n","import styled from '@emotion/styled';\n\nexport const Filters = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 10px;\n  padding: 12px;\n  width: 100%;\n  border: 2px solid lightblue;\n  border-radius: 5px;\n  background-color: #ececec;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  border: 1px solid lightblue;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContactFilter } from 'redux/filter/selectors';\nimport { setContactFilter } from 'redux/filter/slice';\nimport { FilterInput, FilterLabel, Filters } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactFilter);\n\tconst dispatch = useDispatch();\n\n\treturn (\n    <Filters>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filter}\n        placeholder={' '}\n        onChange={e => dispatch(setContactFilter(e.currentTarget.value))}\n      />\n    </Filters>\n  );\n};","import { Box } from '@mui/material';\n// import { Loader } from 'components/Loader/Loader';\nimport ContactForm from 'components/contactForm/contactForm';\nimport { MyContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      {/* {isLoading && <Loader />} */}\n\n      <section>\n        <h1>Add Contact</h1>\n        <ContactForm />\n        <h2>Filter</h2>\n        <Filter />\n        <h2>Your contacts list</h2>\n        <MyContactList />\n        {/* {isSuccess && <MyContactList contacts={data} />} */}\n\n        {/* {!isLoading && !error && <MyContactList />} */}\n      </section>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["NewContactForm","styled","NameLabel","NameInput","NumberLabel","NumberInput","AddContactBtn","selectContacts","state","contacts","items","ContactForm","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","nameContact","elements","name","value","trim","numberContact","number","some","contact","toLowerCase","alert","reset","addContact","id","nanoid","htmlFor","type","placeholder","pattern","title","required","ContactItem","ContactsList","ContactsItem","ContactDeleteBtn","selectContactFilter","filter","MyContactList","filteredContacts","includes","length","map","onClick","deleteContact","Filters","FilterLabel","FilterInput","Filter","onChange","setContactFilter","useEffect","fetchContacts","Box"],"sourceRoot":""}