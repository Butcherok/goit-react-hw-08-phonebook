{"version":3,"file":"static/js/951.151b3839.chunk.js","mappings":"sQAEaA,EAAS,WACrB,OACC,gBACCC,MAAO,CACNC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBALb,UAQC,SAAC,KAAD,CACCC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,qBACVC,SAAS,KAIZ,E,mBCpBYC,EAAiBC,EAAAA,EAAAA,KAAH,iUAgBdC,EAAYD,EAAAA,EAAAA,MAAH,4CAITE,EAAYF,EAAAA,EAAAA,MAAH,yHAOTG,EAAcH,EAAAA,EAAAA,MAAH,4CAIXI,EAAcJ,EAAAA,EAAAA,MAAH,yHAOXK,EAAgBL,EAAAA,EAAAA,OAAH,idC7BX,SAASM,IA0BtB,OACE,UAACP,EAAD,CAAgBQ,SAvBD,SAAAC,GACfA,EAAEC,iBACWD,EAAEE,cAiBVC,OACN,EAGC,WACE,SAACV,EAAD,CAAWW,QAAQ,cAAnB,mBACA,SAACV,EAAD,CACEW,KAAK,OACLC,KAAK,OACLC,GAAG,cACHC,YAAY,cACZC,QAAQ,yHACRC,MAAM,uIACNC,UAAQ,KAEV,SAAChB,EAAD,CAAaS,QAAQ,gBAArB,qBACA,SAACR,EAAD,CACES,KAAK,MACLC,KAAK,SACLC,GAAG,gBACHC,YAAY,YACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAACd,EAAD,CAAeQ,KAAK,SAApB,2BAGL,CC5DM,I,UAAMO,EAAUpB,EAAAA,EAAAA,IAAH,2TAcPqB,EAAcrB,EAAAA,EAAAA,MAAH,4CAIXsB,EAActB,EAAAA,EAAAA,MAAH,yHCfXuB,EAAS,WACrB,IAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACC,UAACR,EAAD,YACC,SAACC,EAAD,CAAaT,QAAQ,SAArB,oCACA,SAACU,EAAD,CACCT,KAAK,OACLC,KAAK,SACLC,GAAG,SACHc,MAAOL,EACPM,SAAU,cAAGpB,cAAiBmB,MAApB,OAAkCF,GAAlC,MAIb,ECnBYI,EAAc/B,EAAAA,EAAAA,EAAH,sBAEXgC,EAAgBhC,EAAAA,EAAAA,EAAH,sBCDX,SAASiC,EAAT,GAAuC,IAAhBnB,EAAe,EAAfA,KAAMoB,EAAS,EAATA,MAC3C,OACC,iCACC,UAACH,EAAD,WAAcjB,EAAd,SACA,SAACkB,EAAD,UAAgBE,MAGlB,CCRM,IAAMC,EAAenC,EAAAA,EAAAA,GAAH,sTAaZoC,EAAepC,EAAAA,EAAAA,GAAH,+WAkBZqC,EAAmBrC,EAAAA,EAAAA,OAAH,wUCxBhBsC,EAAgB,WAC5B,IAAMC,GAAkBd,EAAAA,EAAAA,MAClBE,GAAWC,EAAAA,EAAAA,MAEjB,OACC,SAACO,EAAD,UACEI,EAAgBC,KAAI,YAA0B,IAAvBzB,EAAsB,EAAtBA,GAAID,EAAkB,EAAlBA,KAAMoB,EAAY,EAAZA,MACjC,OACC,UAACE,EAAD,YACC,SAACH,EAAD,CAAanB,KAAMA,EAAMoB,MAAOA,KAChC,SAACG,EAAD,CACCxB,KAAK,SACL4B,QAAS,kBAAMd,GAAN,EAFV,sBAFkBZ,EAUpB,KAGH,ECKD,EA1BiB,WAChB,IAAM2B,GAAYjB,EAAAA,EAAAA,IAAYkB,EAAAA,IACxBC,GAAQnB,EAAAA,EAAAA,MACRE,GAAWC,EAAAA,EAAAA,MASjB,OAPAiB,EAAAA,EAAAA,YAAU,WACTlB,IACIiB,GACHE,MAAMF,MAAMA,EAEb,GAAE,CAACjB,EAAUiB,KAGb,UAACG,EAAA,EAAD,WACEL,IAAa,SAACvD,EAAD,KACd,gCACC,uCACA,SAACmB,EAAD,KACA,sCACA,SAACiB,EAAD,KACEmB,IAAcE,IAAS,SAACN,EAAD,SAI5B,C","sources":["components/Loader/Loader.jsx","components/contactForm/contactForm.styled.jsx","components/contactForm/contactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","Pages/Contacts.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '50%',\n\t\t\t\tleft: '50%',\n\t\t\t\ttransform: 'translate(-50%,-50%)',\n\t\t\t}}\n\t\t>\n\t\t\t<ThreeDots\n\t\t\t\theight=\"80\"\n\t\t\t\twidth=\"80\"\n\t\t\t\tradius=\"9\"\n\t\t\t\tcolor=\"grey\"\n\t\t\t\tariaLabel=\"three-dots-loading\"\n\t\t\t\tvisible={true}\n\t\t\t/>\n\t\t</div>\n\t);\n};","import styled from '@emotion/styled';\n\nexport const NewContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 10px;\n  padding: 12px;\n  width: 100%;\n\n  border: 2px solid lightblue;\n  \n  border-radius: 5px;\n  background-color: #ececec;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const NameLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const NameInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  border: 1px solid lightblue;\n`;\n\nexport const NumberLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const NumberInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  border: 1px solid lightblue;\n`;\n\nexport const AddContactBtn = styled.button`\n  padding: 8px;\n  background-color: lightblue;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 18px;\n  &:hover {\n    scale: 1.05;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n  &:active {\n    background-color: lightgreen;\n    transform: scale(0.95);\n    transition: all 0.1s ease-in-out;\n  }\n  &:disabled {\n    background-color: lightcoral;\n  }\n`;\n","import {   } from '../../redux/index';\nimport {\n  AddContactBtn,\n  NameInput,\n  NameLabel,\n  NewContactForm,\n  NumberInput,\n  NumberLabel,\n} from './contactForm.styled';\n// import { useDispatch, useSelector } from 'react-redux';\n\nexport default function ContactForm() {\n  // const contacts = useSelector(selectContacts);\n  // const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    // const nameContact = form.elements.name.value.trim();\n    // const numberContact = form.elements.number.value.trim();\n\n    // const searchTwins = contacts.some(\n    //   contact =>\n    //     contact.name.toLowerCase() ===\n    //     form.elements.name.value.toLowerCase().trim()\n    // );\n\n    // if (searchTwins) {\n    //   alert(`${form.elements.name.value.trim()} is already in contacts`);\n    //   form.reset();\n    //   return;\n    // }\n    // dispatch(addContact({name: nameContact, phone: numberContact}));\n\n    form.reset();\n  };\n\n  return (\n    <NewContactForm onSubmit={onSubmit}>\n      <NameLabel htmlFor=\"nameContact\">Name</NameLabel>\n      <NameInput\n        type=\"text\"\n        name=\"name\"\n        id=\"nameContact\"\n        placeholder=\"Jack Jonson\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batze Castelmore d'Artagnan\"\n        required\n      />\n      <NumberLabel htmlFor=\"numberContact\">Number</NumberLabel>\n      <NumberInput\n        type=\"tel\"\n        name=\"number\"\n        id=\"numberContact\"\n        placeholder=\"123-45-67\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n    </NewContactForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Filters = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 10px;\n  padding: 12px;\n  width: 100%;\n  border: 2px solid lightblue;\n  border-radius: 5px;\n  background-color: #ececec;\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 18px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 18px;\n  border: 1px solid lightblue;\n`;\n","import { FilterInput, FilterLabel, Filters } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/index';\nimport {  } from 'redux/index';\n\nexport const Filter = () => {\n\tconst filter = useSelector(selectFilter);\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Filters>\n\t\t\t<FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n\t\t\t<FilterInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"filter\"\n\t\t\t\tid=\"filter\"\n\t\t\t\tvalue={filter}\n\t\t\t\tonChange={({ currentTarget: { value } }) => dispatch()}\n\t\t\t/>\n\t\t</Filters>\n\t);\n};","import styled from '@emotion/styled';\n\nexport const ContactName = styled.p``;\n\nexport const ContactNumber = styled.p``;\n","import PropTypes from 'prop-types';\nimport { ContactName, ContactNumber } from './Contact.styled';\n\nexport default function ContactItem({ name, phone }) {\n\treturn (\n\t\t<>\n\t\t\t<ContactName>{name}: </ContactName>\n\t\t\t<ContactNumber>{phone}</ContactNumber>\n\t\t</>\n\t);\n}\n\nContactItem.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tphone: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  width: 100%;\n  border: 2px solid lightblue;\n  border-radius: 5px;\n  background-color: #ececec;\n  -webkit-filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n`;\n\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  gap: 20px;\n  padding: 20px 12px;\n  background-color: white;\n  border: 1px solid lightblue;\n  border-radius: 5px;\n  &:nth-of-type(2n) {\n    background-color: lightblue;\n  }\n  &:nth-of-type(2n-1) {\n    background-color: #cbf0fd;\n  }\n`;\n\nexport const ContactDeleteBtn = styled.button`\n  margin-left: auto;\n  padding: 4px 8px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #ffb8b8;\n\n  &:hover {\n    background-color: lightcoral;\n    scale: 1.05;\n    transition: all 0.3s ease-in-out;\n    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {  } from '../../redux/index';\nimport ContactItem from '../Contact/Contact';\nimport {\n\tContactDeleteBtn,\n\tContactsItem,\n\tContactsList,\n} from './ContactList.styled';\n\nexport const MyContactList = () => {\n\tconst filtredContacts = useSelector();\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<ContactsList>\n\t\t\t{filtredContacts.map(({ id, name, phone }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ContactsItem key={id}>\n\t\t\t\t\t\t<ContactItem name={name} phone={phone} />\n\t\t\t\t\t\t<ContactDeleteBtn\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => dispatch()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</ContactDeleteBtn>\n\t\t\t\t\t</ContactsItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ContactsList>\n\t);\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport {   selectIsLoading } from 'redux/index';\nimport { Loader } from 'components/Loader/Loader';\nimport ContactForm from 'components/contactForm/contactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { MyContactList } from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n\tconst isLoading = useSelector(selectIsLoading);\n\tconst error = useSelector();\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch();\n\t\tif (error) {\n\t\t\talert.error(error);\n\t\t}\n\t}, [dispatch, error]);\n\n\treturn (\n\t\t<Box>\n\t\t\t{isLoading && <Loader />}\n\t\t\t<section>\n\t\t\t\t<h1>Phonebook</h1>\n\t\t\t\t<ContactForm />\n\t\t\t\t<h2>Contacts</h2>\n\t\t\t\t<Filter />\n\t\t\t\t{!isLoading && !error && <MyContactList />}\n\t\t\t</section>\n\t\t</Box>\n\t);\n};\n\nexport default Contacts;\n"],"names":["Loader","style","position","top","left","transform","height","width","radius","color","ariaLabel","visible","NewContactForm","styled","NameLabel","NameInput","NumberLabel","NumberInput","AddContactBtn","ContactForm","onSubmit","e","preventDefault","currentTarget","reset","htmlFor","type","name","id","placeholder","pattern","title","required","Filters","FilterLabel","FilterInput","Filter","filter","useSelector","selectFilter","dispatch","useDispatch","value","onChange","ContactName","ContactNumber","ContactItem","phone","ContactsList","ContactsItem","ContactDeleteBtn","MyContactList","filtredContacts","map","onClick","isLoading","selectIsLoading","error","useEffect","alert","Box"],"sourceRoot":""}